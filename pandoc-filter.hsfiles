{-# START_FILE README.md #-}

# A Custom Template for Pandoc Filter

This is a custom filter with Haskell Stack for writing a custom [Pandoc](http://pandoc.org/) filter.

## Usage

```
$ stack new {{name}} (URL.hsfiles)
$ cd {{name}}
$ stack setup
(Write your custom filter in src/Main.hs)
$ stack build
(It might take a couple of minutes...)
```

Check your filter as:

```
$ pandoc input.md -t json | stack exec my-filter | pandoc -f json -o output.md
```

Finally, copy it to `~/.local/bin` (set it in PATH in your shell):

```
$ stack install
```

Now you can use it as:

```
$ pandoc input.md -t json --filter {{name}} -o output.md
```

# Trouble Shooting

When build fails, versions of `pandoc` and `pandoc-types`
might not match with Stack resolver (that specify GHC version).

If you installed the lastest version of Pandoc (as client binary):

- Check pandoc version: `$ pandoc --version`
    - Check versions of `pandoc` itself and `pandoc-types`
- Fix {{name}}.cabal as the checked versions above are satisfied
- Fix resolver's version to be the newest

## See also

- How to write your Pandoc filter:
    - [Pandoc - Scripting with pandoc](http://pandoc.org/scripting.html)
- How to build it with Stack:
    - [Home - The Haskell Tool Stack](https://docs.haskellstack.org/en/stable/README/)
- How to custom this Stack template:
    - [commercialhaskell/stack-templates: Project templates for stack new](https://github.com/commercialhaskell/stack-templates)

## License
BSD3

{-# START_FILE {{name}}.cabal #-}
name:                {{name}}
version:             0.1.0.0
synopsis:            Initial template for Pandoc filter
description:         Please see README.md
homepage:            https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme
license:             BSD3
license-file:        LICENSE
author:              {{author-name}}{{^author-name}}Author name here{{/author-name}}
maintainer:          {{author-email}}{{^author-email}}example@example.com{{/author-email}}
copyright:           {{copyright}}{{^copyright}}{{year}}{{^year}}2017{{/year}} {{author-name}}{{^author-name}}Author name here{{/author-name}}{{/copyright}}
category:            Text
build-type:          Simple
cabal-version:       >=1.10
extra-source-files:  README.md

executable {{name}}
  hs-source-dirs:      src
  main-is:             Main.hs
  default-language:    Haskell2010
  build-depends:       base >= 4.7 && < 5,
                       pandoc-types >= 1.17 && < 1.18,
                       pandoc >= 1.19.2 && < 2.1

{-# START_FILE Setup.hs #-}
import Distribution.Simple
main = defaultMain

{-# START_FILE src/Main.hs #-}
module Main where

import Text.Pandoc.JSON

main :: IO ()
main = toJSONFilter behead
  where behead (Header n _ xs) | n >= 2 = Para [Emph xs]
        behead x = x

{-# START_FILE LICENSE #-}
Copyright {{author-name}}{{^author-name}}Author name here{{/author-name}} (c) {{year}}{{^year}}2016{{/year}}

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * Neither the name of {{author-name}}{{^author-name}}Author name here{{/author-name}} nor the names of other
      contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
